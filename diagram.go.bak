package main

import (
	"image"
	"image/color"
)

func GenerateDiagram(expr AstLambdaExpr) image.Image {
	// idea : 변수가 사용 될때마다 선이 추가되는 규칙 따라서 먼저 변수 사용 개수 센 후, 이미지 생성
	//

	astList := arrangeExpr(expr)
	varCount := 0
	astCount := 0
	appCount := 0
	for _, e := range astList {
		switch e.(type) {
		case AstVariable:
			varCount++
		case AstAbstraction:
			astCount++
		case AstApplication:
			appCount++
		}
	}

	width := 3*varCount + 2
	height := astCount + appCount + 1 + 2

	img := image.NewNRGBA(image.Rectangle{image.Point{0, 0}, image.Point{width, height}})

	for x := range width {
		for y := range height {
			img.Set(x, y, color.White)
		}
	}
	for v := range varCount {
		for y := range height-2 {
			img.Set(2+3*v, y+1, color.Black)
		}
	}

	return img
}

func arrangeExpr(expr AstLambdaExpr) []AstLambdaExpr {
	var list []AstLambdaExpr

	list = append(list, expr)
	switch e := expr.(type) {
	case AstApplication:
		list = append(list, arrangeExpr(e.Function)...)
		list = append(list, arrangeExpr(e.Argument)...)
	case AstAbstraction:
		list = append(list, arrangeExpr(e.Body)...)
	}

	return list
}
